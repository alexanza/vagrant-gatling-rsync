{"name":"Vagrant-gatling-rsync","tagline":"An rsync watcher for Vagrant 1.5.1+ that uses fewer host resources.","body":"# vagrant-gatling-rsync\r\n\r\nAn rsync watcher for Vagrant 1.5.1+ that uses fewer host resources at the\r\npotential cost of more rsync actions.\r\n\r\n## Getting started\r\n\r\nTo get started, you need to have Vagrant 1.5.1 installed on your Linux or\r\nMac OS X host machine. To install the plugin, use the following command.\r\n\r\n```bash\r\nvagrant plugin install vagrant-gatling-rsync\r\n```\r\n\r\n## Working with this plugin\r\n\r\nAdd the following information to the Vagrantfile to set the coalescing\r\nthreshold in seconds. If you do not set it, it will default to 1.5.\r\n\r\nYou may also specify what\r\n[Time.strftime](http://www.ruby-doc.org/core-2.0.0/Time.html#method-i-strftime)\r\noptions the plugin will use when it reports on completed rsyncs. The default is\r\n\"%I:%M:%S %p\".\r\n\r\nYou will also need to have at least one synced folder set to type \"rsync\"\r\nto use the plugin.\r\n\r\n```ruby\r\nVAGRANTFILE_API_VERSION = \"2\"\r\n\r\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\r\n  config.vm.box = \"hashicorp/precise64\"\r\n\r\n  config.vm.synced_folder \"../files\", \"/opt/vagrant/rsynced_folder\", type: \"rsync\",\r\n    rsync__exclude: [\".git/\", \".idea/\"]\r\n\r\n  # Configure the window for gatling to coalesce writes.\r\n  if Vagrant.has_plugin?(\"vagrant-gatling-rsync\")\r\n    config.gatling.latency = 2.5\r\n    config.gatling.time_format = \"%H:%M:%S\"\r\n  end\r\nend\r\n```\r\n\r\nWith the Vagrantfile configured in this fashion, you can run the following\r\ncommand to sync files.\r\n\r\n```bash\r\nvagrant gatling-rsync-auto\r\n```\r\n\r\n## Why \"gatling\"?\r\n\r\nThe gatling gun was the first gun capable of firing continuously.\r\n\r\n## This plugin\r\n\r\nThe built-in rsync-auto plugin sometimes uses a lot of CPU and disk I/O when\r\nit starts up on very large rsynced directories. This plugin is designed to\r\nwork well with such large rsynced folders.\r\n\r\nThe rsync-auto command that ships with Vagrant 1.5 uses the listen gem. The\r\nListen gem is quite thorough - it uses Celluloid to spin up an actor system\r\nand it checks file contents on OS X to ensure that running \"touch\" on a file\r\n(to do a write but not update its content) will not fire the rsync command.\r\n\r\nThe downside of using Listen is that it takes a large amount of host resources\r\nto monitor large directory structures. This gem works well with to monitor\r\ndirectories hierarchies with 10,000-100,000 files.\r\n\r\nThis gem's implementation is much closer to the underlying fsevent or inotify\r\nAPIs, which allows for higher performance.\r\n\r\n## Event coalescing\r\n\r\nThis plugin also coalesces events for you. The default latency is 1.5 seconds.\r\nIt is configurable through the `config.gatling.latency` parameter.\r\nIf you specify a latency of two seconds, this plugin will not fire a\r\n`vagrant rsync` until two contiguous seconds without file events have passed.\r\nThis will delay rsyncs from happening if many writes are happening on the host\r\n(during a `make` or a `git clone`, for example) until the activity has leveled off.\r\n\r\n## Authors\r\n\r\nSteven Merrill (@stevenmerrill) originally had the idea to tap into rb-fsevent\r\nand rb-inotify to more efficiently rsync files.\r\n\r\nDoug Marcey (@dougmarcey) provided considerable guidance in the implementation\r\nof the coalescing functionality and wrote the initial sketch of the Linux and\r\nWindows adapters.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}